										Redolog Management
										
										
🔁 What Are Redo Logs?
		Redo logs are essential in Oracle. They record all changes made to the database, used for:
		Recovering the database after a crash
		Supporting Data Guard
		Enabling archiving in ARCHIVELOG mode

🧱 Redo Log Structure
		Redo logs are organized into groups
		Each group contains at least one member (a physical file)
		Oracle writes to one group at a time
		Redo logs are circular — reused after all others are filled

📌 Key Terms

	Term							Meaning
	Redo Log Group		A set of one or more identical redo log files
	Member				A single redo log file
	LGWR				Log Writer process – writes redo entries to disk
	Checkpoint			Triggers writing of dirty buffers and log switch
	ARCH				Archiver process – copies redo to archive logs
	
	
	
	
	
	

	

SQL> SELECT group#, thread#, sequence#, bytes/1024/1024 AS size_mb,status, archived FROM v$log;

    GROUP#|   THREAD#| SEQUENCE#|   SIZE_MB|STATUS		    |ARC
----------|----------|----------|----------|----------------|---
		 1|		    1|	      25|		200|CURRENT		    |NO
		 2|		    1|	      23|		200|INACTIVE	    |NO
		 3|		    1|	      24|		200|INACTIVE	    |NO
SQL> set lines 200 pages 200
col member for a90
col is_recovery_dest_file for a22
SELECT group#, member, type, is_recovery_dest_file FROM v$logfile;

    GROUP#|MEMBER																				     |TYPE   |IS_RECOVERY_DEST_FILE
----------|------------------------------------------------------------------------------------------|-------|----------------------
		 3|/u01/app/oracle/oradata/PRODDB/onlinelog/o1_mf_3_lrn5lkwn_.log						     |ONLINE |NO
		 3|/u01/app/oracle/fast_recovery_area/PRODDB/onlinelog/o1_mf_3_lrn5ll37_.log			     |ONLINE |YES
		 2|/u01/app/oracle/oradata/PRODDB/onlinelog/o1_mf_2_lrn5lkwd_.log			 			     |ONLINE |NO
		 2|/u01/app/oracle/fast_recovery_area/PRODDB/onlinelog/o1_mf_2_lrn5ll7j_.log			     |ONLINE |YES
		 1|/u01/app/oracle/oradata/PRODDB/onlinelog/o1_mf_1_lrn5lkw2_.log			 			     |ONLINE |NO
		 1|/u01/app/oracle/fast_recovery_area/PRODDB/onlinelog/o1_mf_1_lrn5ll51_.log			     |ONLINE |YES

SQL> SELECT group#, status FROM v$log;

    GROUP#|STATUS
----------|----------------
		 1|CURRENT
		 2|INACTIVE
		 3|INACTIVE
		 
		 
-- creating the duplex DIRECTORY for adding redo group		 
[oracle@oraclept ~]$ mkdir -p /u01/duplex/

-- adding the redo group with logfile
SQL> ALTER DATABASE ADD LOGFILE GROUP 4 ('/u01/duplex/redo_4_03.log',
'/u01/app/oracle/oradata/PRODDB/onlinelog/redo_02.log',
'/u01/app/oracle/fast_recovery_area/PRODDB/onlinelog/redo_01.log') size 100M;

SQL> SELECT group#, member, type, is_recovery_dest_file FROM v$logfile;

    GROUP#|MEMBER																				     |TYPE   |IS_RECOVERY_DEST_FILE
----------|------------------------------------------------------------------------------------------|-------|----------------------
		 3|/u01/app/oracle/oradata/PRODDB/onlinelog/o1_mf_3_lrn5lkwn_.log						     |ONLINE |NO
		 3|/u01/app/oracle/fast_recovery_area/PRODDB/onlinelog/o1_mf_3_lrn5ll37_.log			     |ONLINE |YES
		 2|/u01/app/oracle/oradata/PRODDB/onlinelog/o1_mf_2_lrn5lkwd_.log						     |ONLINE |NO
		 2|/u01/app/oracle/fast_recovery_area/PRODDB/onlinelog/o1_mf_2_lrn5ll7j_.log			     |ONLINE |YES
		 1|/u01/app/oracle/oradata/PRODDB/onlinelog/o1_mf_1_lrn5lkw2_.log						     |ONLINE |NO
		 1|/u01/app/oracle/fast_recovery_area/PRODDB/onlinelog/o1_mf_1_lrn5ll51_.log			     |ONLINE |YES
		 4|/u01/duplex/redo_4_03.log															     |ONLINE |NO
		 4|/u01/app/oracle/oradata/PRODDB/onlinelog/redo_02.log 								     |ONLINE |NO
		 4|/u01/app/oracle/fast_recovery_area/PRODDB/onlinelog/redo_01.log						     |ONLINE |NO


SQL> SELECT group#, status FROM v$log;  

    GROUP#|STATUS
----------|----------------
		 1|CURRENT
		 2|INACTIVE
		 3|INACTIVE
		 4|UNUSED
	 
SQL> alter system switch logfile;

System altered.

SQL> SELECT group#, status FROM v$log;

    GROUP#|STATUS
----------|----------------
		 1|ACTIVE
		 2|INACTIVE
		 3|INACTIVE
		 4|CURRENT

SQL> alter system switch logfile;

System altered.

SQL> SELECT group#, status FROM v$log;

    GROUP#|STATUS
----------|----------------
		 1|ACTIVE
		 2|CURRENT
		 3|INACTIVE
		 4|ACTIVE


SQL> SELECT group#, sequence#, status, first_time
FROM v$log ORDER BY first_time DESC; 

    GROUP#| SEQUENCE#|STATUS	      |FIRST_TIM
----------|----------|----------------|---------
		 2|		   27|CURRENT	      |19-MAY-25
		 4|		   26|INACTIVE	      |19-MAY-25
		 1|		   25|INACTIVE	      |19-MAY-25
		 3|		   24|INACTIVE	      |18-MAY-25

SQL> alter system switch logfile;

System altered.

SQL> SELECT group#, sequence#, status, first_time
FROM v$log ORDER BY first_time DESC;  2  

    GROUP#| SEQUENCE#|STATUS	      |FIRST_TIM
----------|----------|----------------|---------
		 3|		   28|CURRENT	      |19-MAY-25
		 2|		   27|ACTIVE	      |19-MAY-25
		 4|		   26|INACTIVE	      |19-MAY-25
		 1|		   25|INACTIVE	      |19-MAY-25
		 
SQL> SELECT TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI') AS log_time,
       COUNT(*) AS switches
FROM v$log_history
WHERE first_time > SYSDATE - 1
GROUP BY TO_CHAR(first_time, 'YYYY-MM-DD HH24:MI')
ORDER BY log_time;  2    3    4    5    6  

LOG_TIME	|  SWITCHES
----------------|----------
2025-05-18 19:47|	  1
2025-05-18 19:51|	  1
2025-05-19 06:25|	  1
2025-05-19 07:42|	  2


SQL> SELECT TO_CHAR(first_time, 'YYYY-MM-DD') AS day, COUNT(*) AS switches
FROM v$log_history
GROUP BY TO_CHAR(first_time, 'YYYY-MM-DD')
ORDER BY day DESC;  2    3    4  

DAY	  |  SWITCHES
----------|----------
2025-05-19|	    3
2025-05-18|	    2
2024-01-06|	    4
2024-01-05|	    1
2024-01-03|	    1
2024-01-02|	    2
2024-01-01|	    5
2023-12-31|	    1
2023-12-30|	    1
2023-12-29|	    1
2023-12-26|	    6


SQL> alter database add logfile group 4 ('/u01/duplex/redo_4_04.log') size 200M;
Database altered.


 
-- droping the redolog group (which has 1 logfile)

SQL> ALTER DATABASE DROP LOGFILE GROUP 4;
	Error occured, checking for STATUS

SQL> set colsep |
SELECT GROUP#, STATUS FROM V$LOG;

    GROUP#|STATUS
----------|----------------
		 1|ACTIVE
		 2|INACTIVE
		 3|INACTIVE
		 4|CURRENT			(group 4 status is in "current" we cannot drop)
SQL> alter system switch logfile;

System altered.

-- now trying to drop group 4 (which has 1 logfile)
SQL> ALTER DATABASE DROP LOGFILE GROUP 4;
	Error appeared, checking for group 4 STATUS

SQL> SELECT GROUP#, STATUS FROM V$LOG;

    GROUP#|STATUS
----------|----------------
		 1|ACTIVE
		 2|CURRENT
		 3|INACTIVE
		 4|ACTIVE			(group 4 status is in "ACTIVE" we cannot drop)
		 
SQL> SELECT GROUP#, STATUS FROM V$LOG;

    GROUP#|STATUS
----------|----------------
	   	 1|INACTIVE
		 2|ACTIVE
		 3|CURRENT
		 4|ACTIVE

SQL> alter system switch logfile;

System altered.

SQL> SELECT GROUP#, STATUS FROM V$LOG;

    GROUP#|STATUS
----------|----------------
	 1|CURRENT
	 2|ACTIVE
	 3|ACTIVE
	 4|ACTIVE

SQL> alter system switch logfile;

System altered.

SQL> SELECT GROUP#, STATUS FROM V$LOG;

    GROUP#|STATUS
----------|----------------
	 1|ACTIVE
	 2|ACTIVE
	 3|ACTIVE
	 4|CURRENT


--Repeat this until the group you're targeting becomes INACTIVE. 
--If it still won’t become inactive, try:

First Method:

SQL> ALTER SYSTEM CHECKPOINT;

System altered.

SQL> SELECT GROUP#, STATUS FROM V$LOG;

    GROUP#|STATUS
----------|----------------
	 1|INACTIVE
	 2|INACTIVE
	 3|INACTIVE
	 4|CURRENT

SQL> alter system switch logfile;

System altered.

SQL> SELECT GROUP#, STATUS FROM V$LOG;

    GROUP#|STATUS
----------|----------------
	 1|INACTIVE
	 2|CURRENT
	 3|INACTIVE
	 4|INACTIVE

---By seeing above group 4 is in INACTIVE mode so we can drop it now

SQL> alter database drop logfile group 4;

Database altered.
SQL> alter system switch logfile;

System altered.

SQL> SELECT GROUP#, STATUS FROM V$LOG;

    GROUP#|STATUS
----------|----------------
	 1|INACTIVE
	 2|ACTIVE
	 3|CURRENT










Second Method:

SQL> archive log list

Database log mode	       No Archive Mode


---By seeing above we found that, "Database is in (No archivemode) so logs are not converting to archivelogs,
now we should convert into archive mode, by doing as below.

SQL> shut immediate;
SQL> alter database mount;
SQL> alter database archivelog;
SQL> alter database open;
SQL> archive log list;












--- checking for logfile size in eachgroup
SQL> set lines 200 pages 200
set colsep |
col member for a80
col GROUP# for 99999999
SELECT 
    l.GROUP#,
    lf.MEMBER,
    lf.TYPE,
    f.BYTES / 1024 / 1024 AS SIZE_MB
FROM 
    V$LOG l
JOIN 
    V$LOGFILE lf ON l.GROUP# = lf.GROUP#
JOIN 
    V$LOG f ON f.GROUP# = lf.GROUP#
ORDER BY 
    l.GROUP#, lf.MEMBER;
	
   GROUP#|MEMBER																		  |TYPE   |   SIZE_MB
---------|--------------------------------------------------------------------------------|-------|----------
		1|/u01/app/oracle/fast_recovery_area/PRODDB/onlinelog/o1_mf_1_lrn5ll51_.log		  |ONLINE |	  200
		1|/u01/app/oracle/oradata/PRODDB/onlinelog/o1_mf_1_lrn5lkw2_.log				  |ONLINE |	  200
		2|/u01/app/oracle/fast_recovery_area/PRODDB/onlinelog/o1_mf_2_lrn5ll7j_.log		  |ONLINE |	  200
		2|/u01/app/oracle/oradata/PRODDB/onlinelog/o1_mf_2_lrn5lkwd_.log				  |ONLINE |	  200
		3|/u01/app/oracle/fast_recovery_area/PRODDB/onlinelog/o1_mf_3_lrn5ll37_.log		  |ONLINE |	  200
		3|/u01/app/oracle/oradata/PRODDB/onlinelog/o1_mf_3_lrn5lkwn_.log				  |ONLINE |	  200
		
		
🚨 Important Notes

	Minimum log groups: Oracle requires at least 2 redo log groups. If you're trying 
to drop a group and that would leave fewer than 2, it won’t allow it.

	Multiplexed log files: If the group has multiple members (files), you can drop individual members instead using:	


How to resize redolog file
⚠️ You cannot resize a redo log file directly. You must drop and recreate the group or member.


SQL> ALTER SYSTEM CHECKPOINT;

System altered.

SQL> SELECT GROUP#, STATUS FROM V$LOG;

   GROUP#|STATUS
---------|----------------
	1|CURRENT
	2|INACTIVE
	3|INACTIVE
	4|INACTIVE

SQL> alter database drop logfile group 4;

Database altered.

SQL> alter database add logfile group 4 ('/u01/duplex/redo_4_07.log') size 500M;

Database altered.

SQL> SELECT GROUP#, STATUS FROM V$LOG;

   GROUP#|STATUS
---------|----------------
	1|CURRENT
	2|INACTIVE
	3|INACTIVE
	4|UNUSED
SQL> alter database add logfile group 5 ('/u01/duplex/redo_5_01.log') size 100M;

Database altered.

SQL> SELECT GROUP#, STATUS FROM V$LOG;

   GROUP#|STATUS
---------|----------------
	1|CURRENT
	2|INACTIVE
	3|INACTIVE
	4|UNUSED
	5|UNUSED

SQL> set lines 200 pages 200
set colsep |
col member for a80
col GROUP# for 99999999
SELECT 
    l.GROUP#,
    lf.MEMBER,
    lf.TYPE,
    f.BYTES / 1024 / 1024 AS SIZE_MB
FROM 
    V$LOG l
JOIN 
    V$LOGFILE lf ON l.GROUP# = lf.GROUP#
JOIN 
    V$LOG f ON f.GROUP# = lf.GROUP#
ORDER BY 
    l.GROUP#, lf.MEMBER;SQL> SQL> SQL> SQL>   2    3    4    5    6    7    8    9   10   11   12   13  

   GROUP#|MEMBER																		  |TYPE   |   SIZE_MB
---------|--------------------------------------------------------------------------------|-------|----------
		1|/u01/app/oracle/fast_recovery_area/PRODDB/onlinelog/o1_mf_1_lrn5ll51_.log		  |ONLINE |	  200
		1|/u01/app/oracle/oradata/PRODDB/onlinelog/o1_mf_1_lrn5lkw2_.log				  |ONLINE |	  200
		2|/u01/app/oracle/fast_recovery_area/PRODDB/onlinelog/o1_mf_2_lrn5ll7j_.log		  |ONLINE |	  200
		2|/u01/app/oracle/oradata/PRODDB/onlinelog/o1_mf_2_lrn5lkwd_.log				  |ONLINE |	  200
		3|/u01/app/oracle/fast_recovery_area/PRODDB/onlinelog/o1_mf_3_lrn5ll37_.log		  |ONLINE |	  200
		3|/u01/app/oracle/oradata/PRODDB/onlinelog/o1_mf_3_lrn5lkwn_.log				  |ONLINE |	  200
		4|/u01/duplex/redo_4_07.log														  |ONLINE |	  500
		5|/u01/duplex/redo_5_01.log														  |ONLINE |	  100
							
8 rows selected.

